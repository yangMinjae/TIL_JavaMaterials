1.1 프로그래밍 언어란 무엇인가
 - 컴퓨터가 이해할 수 있는 언어는 '기계어'로 0과 1로 이루어진 코드이다.
 - 인간의 언어와 기계어의 중간 다리 역할이 프로그래밍 언어
 - 일반적으로 프로그래밍 언어라고 하면 고급 언어를 말하는데, 대표적으로
   C, C++, Java등이 속한다. 이 언어들로 작성된 내용을 소스(Source)라고 부르고,
     이 소스는 컴파일러(Compiler)라는 소프트웨어에 의해 기계어로 변환된 후
     컴퓨터에서 실행할 수 있게 된다.

1.2 자바란 무엇인가
 - 1995년 썬 마이크로시스템즈에서 만들어진 '객체 지향' 프로그래밍 언어로
     가전 제품을 제어하기 위한 목적으로 만들어졌지만 1999년도부터 
     인터넷이 활성화되면서 급부상
 - 현재 대한민국의 정부 및 기업들의 시스템 프로젝트가 대부분 자바로 구현.
     즉 공공사업 개발에 적용되는 개발 프레임워크의 표준이라 말하는 '전자 정부 프레임워크'의
     기반이 되는 개발환경
 - 국내 모바일 시장의 약 80%를 점유하는 모바일 플랫폼 '안드로이드'의 기반 언어
	
1.3 자바의 특징
 - 이식성이 높은 언어(운영체제 호환)
 - 객체 지향 언어
 - 메모리를 자동으로 관리(Garbage Collection)
 - 멀티 스레드 지원
 - 오픈 라이브러리가 풍부
 - 다양한 어플리케이션 개발(web, mobile 등)
 
1.4 자바 에디션
 1) JAVA SE(Standard Edition)
  - 데스크탑과 서버에서 자바 애플리케이션을 개발하고 실행 할 수 있게 해주며
  임베디드 환경(embedded environment)과 실시간 환경(real-Time environment)도 지원
 2) JAVA EE(Enterprise Edition)
  - 기업용 애플리케이션을 개발하는 데 필요한 여러 가지 도구 및 라이브러리들을 모아 놓은 것.
  - 응용 서버, 웹서버, 엔터프라이즈 자바 빈즈(JavaBeans)지원, 자바 서블릿 API와 JSP 등 포함
 3) JAVA ME(Micro Edition)
  - 핸드폰, PDA, TV 셉톱박스 같은 임베디드 장치들에서 실행되는 애플리케이션을 위한 환경 제공

1.5 자바 개발 환경 구축
 - 자바 개발 키트(JDK:Java Development Kit)와 자바 실행 환경(JRE:Java Runtime Environment)
     라는 두가지 버전이 있다.
 - JDK는 프로그램 개발에 필요한 자바 가상 기계(JVM), 라이브러리 API, 컴파일러 등의
     개발 도구가 포함되어 있고, JRE는 프로그램 실행에
      필요한 자바 가상 기계(JVM), 라이브러리 API만 포함
 
1.6 자바 설치 및 환경 변수 설정
 - ppt 참고

1.7 소스 작성(HelloWorld)

1.8 자바 실행 순서
 1. .java 소스 파일 작성
 2. 컴파일러(javac.exe)로 바이트 코드 파일(.class) 생성
 3. JVM 구동 명령어(java.exe)로 실행
 
1.9 자바 API

1.10 통합 개발 환경
 - 통합 개발 환경(IDE:Integrated Development Environment) 소스 에디터,
     컴파일러, 디버거가 결합
 - ex) 이클립스(Eclipse), 인텔리제이(IntelliJ), 비주얼 스튜디오 코드(VS Code)

1.10 이클립스 설치